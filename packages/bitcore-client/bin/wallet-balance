#!/usr/bin/env node

const program = require('commander');
const { Wallet } = require('../ts_build/src/wallet');

try {
  program
    .version(require('../package.json').version)
    .requiredOption('--name <name>', 'REQUIRED - Wallet name')
    .option('--time <time>', 'optional - Get balance at specific time')
    .option('--path <path>', 'optional - Custom wallet storage path')
    .option('--storageType <storageType>', 'optional - name of the database to use (default level)')
    .option('--token <token>', 'optional - Get balance of an ERC20 token')
    .option('--tokenName <tokenName>', 'optional - Get balance of an ERC20 token using custom token name')
    .parse(process.argv);
} catch (e) {
  console.log(e.message);
  return program.help();
}

let wallet;

async function main() {
  const { name, path, time, storageType, token, tokenName } = program.opts();
  wallet = await Wallet.loadWallet({ name, path, storageType });
  const balance = await wallet.getBalance(time, token, tokenName);
  return Object.assign(balance, {
    currency: tokenName || token || wallet.chain,
    network: wallet.network
  });
}

main()
  .then(res => console.log(res))
  .catch(err => console.error(err))
  .finally(() => wallet?.storage?.close());
